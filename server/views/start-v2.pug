doctype html

html
  head
    title Task Meow

  body
    script(src="https://statics.teams.cdn.office.net/sdk/v1.11.0/js/MicrosoftTeams.min.js", integrity="sha384-SCVF3m7OvDKnfAilUzYn2yozEvBeP8n/Oq0yTH8VUI70J4AzrqR70jzjdQ6DI8s2", crossorigin="anonymous")
    script(src="https://alcdn.msauth.net/browser/2.11.0/js/msal-browser.min.js", integrity="sha384-mxc9xXB8zELCYWdhT4JCez24AMsgk+uN7e991ek2TrQy9rBPVlUiuppobVCuja8S", crossorigin="anonymous")

    script.
      microsoftTeams.initialize();

      // Get the tab context and use the information to set the domain and login hints
      microsoftTeams.getContext((context) => {

        // Configure MSAL
        const app = new msal.PublicClientApplication({
          auth: {
            clientId:
              window.location.hostname === "taskmeow.com"
                ? "36b1586d-b1da-45d2-9b32-899c3757b6f8"
                : "ab93102c-869b-4d34-a921-a31d3e7f76ef",
            redirectUri: `${window.location.origin}/tab/v2/silent-end`,
            navigateToLoginRequestUrl: false,
          },
          cache: {
            cacheLocation: "localStorage",
          },
        });

        // Configure the scopes that we need
        const api =
          window.location.hostname === "taskmeow.com"
            ? "api://taskmeow.com/botid-36b1586d-b1da-45d2-9b32-899c3757b6f8/access_as_user"
            : "api://taskmeow.ngrok.io/botid-ab93102c-869b-4d34-a921-a31d3e7f76ef/access_as_user";

        // Configure the domain hint since we are using the /common authority
        const domainHint =
          context.tid === "9188040d-6c67-4c5b-b112-36a304b66dad"
            ? "consumers"
            : "organizations";

        // Configure all the scopes that this app needs
        const loginScopes = [
          "openid",
          "email",
          "profile",
          "offline_access",
          api,
        ];

        // Add non-production scopes
        const extraScopes = ["User.Read"];
        if (window.location.hostname !== "taskmeow.com") {
          extraScopes.push("Calendars.Read");
          extraScopes.push("Calendars.ReadWrite");
        }

        // Navigate to the login flow
        app.loginRedirect({
          loginHint: context.loginHint,
          scopes: loginScopes,
          extraScopesToConsent: extraScopes,
          extraQueryParameters: { domain_hint: domainHint }
        });
      });
